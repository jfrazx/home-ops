---
server:
  enabled: true
  name: server

  replicaCount: 1

  retention: "30d"
  retentionSize: "90GB"

  persistentVolume:
    enabled: true
    storageClass: ceph-block
    size: 100Gi

  resources:
    requests:
      cpu: 100m
      memory: 1Gi
    limits:
      memory: 4Gi

  extraSecretMounts:
    - name: minio-metrics-auth
      mountPath: /etc/prometheus/secrets/minio-metrics-auth
      secretName: minio-metrics-auth
      readOnly: true

  extraFlags:
    - web.enable-lifecycle
    - web.enable-admin-api
    - storage.tsdb.wal-compression

  extraScrapeConfigs: |
    - job_name: prometheus
      static_configs:
        - targets:
          - localhost:9090

    - job_name: kubernetes-apiservers
      kubernetes_sd_configs:
        - role: endpoints
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https

    - job_name: kubernetes-nodes
      kubernetes_sd_configs:
        - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

    - job_name: kubernetes-cadvisor
      kubernetes_sd_configs:
        - role: node
      scheme: https
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor

    - job_name: kubernetes-service-endpoints
      kubernetes_sd_configs:
        - role: endpoints
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          action: replace
          target_label: kubernetes_name

    - job_name: kubernetes-services
      kubernetes_sd_configs:
        - role: service
      metrics_path: /probe
      params:
        module: [http_2xx]
      relabel_configs:
        - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
          action: keep
          regex: true
        - source_labels: [__address__]
          target_label: __param_target
        - target_label: __address__
          replacement: blackbox-exporter.example.com:9115
        - source_labels: [__param_target]
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_service_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_service_name]
          target_label: kubernetes_name

    - job_name: kubernetes-ingresses
      kubernetes_sd_configs:
        - role: ingress
      relabel_configs:
        - source_labels: [__meta_kubernetes_ingress_annotation_prometheus_io_probe]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_ingress_scheme,__address__,__meta_kubernetes_ingress_path]
          regex: (.+);(.+);(.+)
          replacement: ${1}://${2}${3}
          target_label: __param_target
        - target_label: __address__
          replacement: blackbox-exporter.example.com:9115
        - source_labels: [__param_target]
          target_label: instance
        - action: labelmap
          regex: __meta_kubernetes_ingress_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_ingress_name]
          target_label: kubernetes_name

    - job_name: kubernetes-pods
      kubernetes_sd_configs:
        - role: pod
      relabel_configs:
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
          action: keep
          regex: true
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
          action: replace
          target_label: __metrics_path__
          regex: (.+)
        - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
          action: replace
          regex: ([^:]+)(?::\d+)?;(\d+)
          replacement: $1:$2
          target_label: __address__
        - action: labelmap
          regex: __meta_kubernetes_pod_label_(.+)
        - source_labels: [__meta_kubernetes_namespace]
          action: replace
          target_label: kubernetes_namespace
        - source_labels: [__meta_kubernetes_pod_name]
          action: replace
          target_label: kubernetes_pod_name

    # External services
    - job_name: minio
      metrics_path: /minio/v2/metrics/cluster
      basic_auth:
        username_file: /etc/prometheus/secrets/minio-metrics-auth/username
        password_file: /etc/prometheus/secrets/minio-metrics-auth/password
      static_configs:
        - targets: ["primary-hl.storage.svc.cluster.local:9000"]

    - job_name: node-exporter
      static_configs:
        - targets:
            - 10.168.2.91:9100
            - 10.168.2.92:9100
            - 10.168.2.93:9100


alertmanager:
  enabled: false

serverFiles:
  alerting_rules.yml:
    groups:
      - name: kubernetes-alerts
        rules:
          - alert: KubePodCrashLooping
            expr: increase(kube_pod_container_status_restarts_total[15m]) > 0
            for: 0m
            labels:
              severity: critical
            annotations:
              summary: Pod is crash looping
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is crash looping"

  recording_rules.yml:
    groups:
      - name: kubernetes-recording
        rules:
          - record: kubernetes:pod_cpu_usage:rate5m
            expr: sum(rate(container_cpu_usage_seconds_total{container!="POD",container!=""}[5m])) by (namespace, pod)

alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager.observability.svc.cluster.local:9093

kubeStateMetrics:
  enabled: true

nodeExporter:
  enabled: true
  hostRootfs: false

pushgateway:
  enabled: false
