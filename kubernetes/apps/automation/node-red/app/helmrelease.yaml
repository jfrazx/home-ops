---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app node-red
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  values:
    controllers:
      node-red:
        pod:
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
            runAsNonRoot: true
            supplementalGroups: [1001, 568, 100]
            fsGroup: 1000
            fsGroupChangePolicy: "OnRootMismatch"

        containers:
          app:
            image:
              repository: docker.io/nodered/node-red
              tag: 4.1.0
            envFrom:
              - secretRef:
                  name: node-red-secret
            env:
              TZ: "America/Los_Angeles"
              NODE_RED_ENABLE_SAFE_MODE: "false"
              NODE_RED_ENABLE_PROJECTS: "true"
              # MQTT_HOST: "node-red-mqtt-listeners.automation.svc.cluster.local"
              # MQTT_PORT: "1883"

            probes:
              liveness:
                enabled: true
              readiness:
                enabled: true

            resources:
              requests:
                cpu: 22m
                memory: 164M
              limits:
                memory: 262M

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: false  # Node-RED needs to write to filesystem
              capabilities:
                drop: ["ALL"]

    service:
      app:
        controller: *app
        ports:
          http:
            port: 1880

    route:
      app:
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https

    persistence:
      data:
        type: persistentVolumeClaim
        storageClass: truenas-iscsi
        accessMode: ReadWriteOnce
        size: 5Gi
        globalMounts:
          - path: /data

      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp

      # settings:
      #   type: configMap
      #   name: node-red-configmap
      #   globalMounts:
      #     - path: /data/settings.js
      #       subPath: settings.js
      #       readOnly: false
