---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &name authentik
  namespace: auth
spec:
  interval: 30m
  chart:
    spec:
      chart: authentik
      version: 2024.4.2
      sourceRef:
        kind: HelmRepository
        name: authentik
        namespace: flux-system
      interval: 5m
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  values:
    global:
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000

      volumes:
        - name: media-tmp
          emptyDir: {}
        - name: tmp
          emptyDir: {}
        - name: dev-shm
          emptyDir:
            medium: Memory
            sizeLimit: 64Mi
      volumeMounts:
        - name: media-tmp
          mountPath: /media
        - name: tmp
          mountPath: /tmp
        - name: dev-shm
          mountPath: /dev/shm

      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: DoNotSchedule
      podAnnotations:
        secret.reloader.stakater.com/reload: authentik-secret
      deploymentStrategy:
        type: RollingUpdate
        rollingUpdate:
          maxSurge: 0
          maxUnavailable: 1
      envFrom:
        - secretRef:
            name: authentik-secret

    authentik:
      redis:
        host: dragonflydb.database.svc.cluster.local
        port: 6379
        db: 1
      postgresql:
        host: authentik-database-rw.auth.svc.cluster.local
        port: 5432
        name: *name
      error_reporting:
        enabled: false
      log_level: info

    server:
      replicas: 3
      metrics:
        enabled: true
        serviceMonitor:
          enabled: true
      pdb:
        enabled: true
        maxUnavailable: 1
      containerSecurityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 1Gi

    worker:
      replicas: 3
      containerSecurityContext:
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
        capabilities:
          drop:
            - ALL
      resources:
        requests:
          cpu: 100m
          memory: 512Mi
        limits:
          cpu: 500m
          memory: 1Gi

    prometheus:
      rules:
        enabled: true
