---
apiVersion: batch/v1
kind: Job
metadata:
  name: velero-minio-setup
  namespace: velero
spec:
  template:
    spec:
      restartPolicy: OnFailure
      containers:
      - name: mc
        image: minio/mc:latest
        command:
        - /bin/sh
        - -c
        - |
          # Configure MinIO client
          mc alias set minio http://minio.storage.svc.cluster.local:9000 $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD

          # Create bucket if it doesn't exist
          mc mb --ignore-existing minio/velero

          # Create user for Velero
          mc admin user add minio velero-user $VELERO_PASSWORD || true

          # Create or update backup-operator policy
          cat > /tmp/velero-policy.json << EOF
          {
            "Version": "2012-10-17",
            "Statement": [
              {
                "Effect": "Allow",
                "Action": [
                  "s3:ListAllMyBuckets",
                  "s3:GetBucketLocation"
                ],
                "Resource": [
                  "arn:aws:s3:::*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:CreateBucket",
                  "s3:ListBucket",
                  "s3:GetBucketLocation",
                  "s3:GetBucketVersioning",
                  "s3:PutBucketVersioning",
                  "s3:GetBucketObjectLockConfiguration",
                  "s3:PutBucketObjectLockConfiguration",
                  "s3:GetLifecycleConfiguration",
                  "s3:PutLifecycleConfiguration",
                  "s3:GetBucketNotification",
                  "s3:ListBucketVersions"
                ],
                "Resource": [
                  "arn:aws:s3:::velero*"
                ]
              },
              {
                "Effect": "Allow",
                "Action": [
                  "s3:GetObject",
                  "s3:GetObjectVersion",
                  "s3:GetObjectVersionTagging",
                  "s3:DeleteObject",
                  "s3:DeleteObjectVersion",
                  "s3:PutObject",
                  "s3:PutObjectLegalHold",
                  "s3:PutObjectRetention",
                  "s3:PutObjectTagging",
                  "s3:PutObjectVersionTagging",
                  "s3:GetObjectTagging",
                  "s3:RestoreObject",
                  "s3:ListMultipartUploadParts",
                  "s3:AbortMultipartUpload"
                ],
                "Resource": [
                  "arn:aws:s3:::velero*/*"
                ]
              }
            ]
          }
          EOF

          # Create policy
          mc admin policy create minio velero /tmp/velero-policy.json || \
          mc admin policy update minio velero /tmp/velero-policy.json

          # Attach policy to user
          mc admin policy attach minio velero --user velero-user

          echo "Velero MinIO setup completed successfully"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-root-credentials
              key: MINIO_ROOT_USER
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-root-credentials
              key: MINIO_ROOT_PASSWORD
        - name: VELERO_PASSWORD
          valueFrom:
            secretKeyRef:
              name: velero-minio-credentials
              key: VELERO_PASSWORD
