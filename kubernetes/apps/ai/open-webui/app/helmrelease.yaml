---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s-labs/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app open-webui
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
    namespace: flux-system

  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback

  values:
    controllers:
      open-webui:
        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/open-webui/open-webui
              tag: 0.6.32

            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"

            env:
              # - name: GLOBAL_LOG_LEVEL
              #   value: DEBUG

              # Open-webui settings
              ENABLE_OPENAI_API: "False"
              ENABLE_OLLAMA_API: "True"
              OLLAMA_BASE_URL: http://ollama.ai.svc.cluster.local:11434
              WEBUI_URL: "https://chat.${SECRET_DOMAIN}"
              ENABLE_RAG_WEB_SEARCH: true
              ENABLE_SEARCH_QUERY: true
              RAG_WEB_SEARCH_ENGINE: searxng
              SEARXNG_QUERY_URL: http://searxng.ai.svc.cluster.local:8080/search?q=<query>

              # Auth
              ENABLE_OAUTH_SIGNUP: "true"
              OAUTH_MERGE_ACCOUNTS_BY_EMAIL: "true"
              OAUTH_PROVIDER_NAME: "Authentik"
              OPENID_PROVIDER_URL: "https://auth.${SECRET_DOMAIN}/application/o/open-web-ui/.well-known/openid-configuration"
              ENABLE_OAUTH_ROLE_MANAGEMENT: "true"
              ENABLE_OAUTH_GROUP_MANAGEMENT: "true"
              ENABLE_OAUTH_GROUP_CREATION: "true"
              OAUTH_ALLOWED_ROLES: "users, admins"
              OAUTH_ADMIN_ROLES: "admins"
              OAUTH_ROLES_CLAIM: "groups"
              OAUTH_SCOPES: "openid email profile groups"
              DEFAULT_USER_ROLE: "user"
              ENABLE_LOGIN_FORM: "false"
              OAUTH_UPDATE_PICTURE_ON_LOGIN: "true"

              # Image Generation
              ENABLE_IMAGE_GENERATION: false
              IMAGE_GENERATION_ENGINE: automatic1111
              IMAGE_GENERATION_MODEL: dreamshaper_8
              IMAGE_SIZE: 400x400
              IMAGE_STEPS: 8
              AUTOMATIC1111_BASE_URL: http://sdnext.${SECRET_DOMAIN}:7860/
              AUTOMATIC1111_CFG_SCALE: 2
              AUTOMATIC1111_SAMPLER: DPM++ SDE
              AUTOMATIC1111_SCHEDULER: Karras

            resources:
              requests:
                cpu: 500m
                memory: 2Gi
              limits:
                memory: 2Gi

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 8080

    persistence:
      config:
        enabled: true
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 20Gi
        storageClass: ceph-block
        globalMounts:
          - path: /app/backend/data

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/description: Interact with your AI models
          gethomepage.dev/group: LLM/Ai
          gethomepage.dev/icon: sh-open-webui.svg
          gethomepage.dev/name: Open WebUI
          gethomepage.dev/app: open-webui
        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
