---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2beta2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app jellyfin
spec:
  interval: 1h
  chartRef:
    kind: OCIRepository
    name: app-template
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3

  values:
    controllers:
      jellyfin:
        annotations:
          reloader.stakater.com/auto: "true"
          # secret.reloader.stakater.com/reload: "jellyfin-secret"

        containers:
          app:
            image:
              repository: jellyfin/jellyfin
              tag: 10.11.0-rc9
              pullPolicy: IfNotPresent
            # envFrom:
            #   - secretRef:
            #       name: jellyfin-secret
            env:
              DOTNET_SYSTEM_IO_DISABLEFILELOCKING: "true"
              JELLYFIN_FFmpeg__probesize: 50000000
              JELLYFIN_FFmpeg__analyzeduration: 50000000
              JELLYFIN_PublishedServerUrl: https://jellyfin.${SECRET_DOMAIN}
              TZ: America/Los_Angeles

            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /health
                    port: &port 8096
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false

            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                gpu.intel.com/i915: 1
                cpu: 100m
                memory: 512Mi
              limits:
                gpu.intel.com/i915: 1
                memory: 8Gi

        pod:
          securityContext:
            runAsUser: "${VOLSYNC_PUID}"
            runAsGroup: "${VOLSYNC_PGID}"
            fsGroup: 568
            fsGroupChangePolicy: "OnRootMismatch"
            runAsNonRoot: true
            supplementalGroups: [44, 568, 10000, 65539]

    service:
      app:
        controller: *app
        ports:
          http:
            port: *port

    persistence:
      config:
        suffix: config
        type: persistentVolumeClaim
        storageClass: ceph-block
        accessMode: ReadWriteOnce
        size: 50Gi
        globalMounts:
          - path: /config
      cache:
        type: emptyDir
        sizeLimit: 10Gi
        globalMounts:
          - path: /cache

      tmp:
        type: emptyDir
        globalMounts:
          - path: /tmp
      transcode:
        type: emptyDir
        globalMounts:
          - path: /transcode

      backups:
        type: persistentVolumeClaim
        existingClaim: jellyfin-backups
        globalMounts:
          - path: /backups

      movies:
        type: persistentVolumeClaim
        existingClaim: nfs-movies-pvc
        globalMounts:
          - path: /movies

      shows:
        type: persistentVolumeClaim
        existingClaim: nfs-shows-pvc
        globalMounts:
          - path: /shows

    route:
      app:
        hostnames:
          - jellyfin.${SECRET_DOMAIN}
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - identifier: app
                port: *port
