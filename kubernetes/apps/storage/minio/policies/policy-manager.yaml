---
apiVersion: v1
kind: ConfigMap
metadata:
  name: minio-policy-scripts
  namespace: storage
data:
  apply-policy.sh: |
    #!/bin/sh
    # Usage: apply-policy.sh <policy-name> <user-name>

    POLICY_NAME=$1
    USER_NAME=$2

    echo "Applying policy: $POLICY_NAME to user: $USER_NAME"

    # Setup MinIO client
    mc alias set minio https://minio.storage.svc $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD

    # Check if policy file exists
    if [ -f "/policies/apps/${POLICY_NAME}.json" ]; then
      POLICY_FILE="/policies/apps/${POLICY_NAME}.json"
    elif [ -f "/policies/users/${POLICY_NAME}.json" ]; then
      POLICY_FILE="/policies/users/${POLICY_NAME}.json"
    elif [ -f "/policies/base/${POLICY_NAME}.json" ]; then
      POLICY_FILE="/policies/base/${POLICY_NAME}.json"
    else
      echo "Policy file not found: ${POLICY_NAME}.json"
      exit 1
    fi

    # Create or update policy
    mc admin policy create minio ${POLICY_NAME} ${POLICY_FILE} || \
    mc admin policy update minio ${POLICY_NAME} ${POLICY_FILE}

    # Attach policy to user
    mc admin policy attach minio ${POLICY_NAME} --user ${USER_NAME}

    echo "Policy ${POLICY_NAME} applied to user ${USER_NAME}"

  setup-app-user.sh: |
    #!/bin/sh
    # Usage: setup-app-user.sh <app-name> <password>

    APP_NAME=$1
    PASSWORD=$2

    echo "Setting up MinIO user for app: $APP_NAME"

    mc alias set minio https://minio.storage.svc $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD

    # Create user
    mc admin user add minio ${APP_NAME}-user ${PASSWORD}

    # Apply app-specific policy if exists
    if [ -f "/policies/apps/${APP_NAME}.json" ]; then
      /scripts/apply-policy.sh ${APP_NAME} ${APP_NAME}-user
    else
      echo "No specific policy found for ${APP_NAME}, applying readwrite"
      mc admin policy attach minio readwrite --user ${APP_NAME}-user
    fi

    echo "User ${APP_NAME}-user created and configured"
---
apiVersion: batch/v1
kind: Job
metadata:
  name: minio-policy-import
  namespace: storage
spec:
  template:
    spec:
      containers:
      - name: policy-importer
        image: minio/mc:latest
        command: ["/bin/sh"]
        args:
          - -c
          - |
            echo "Importing all policies to MinIO"

            # Wait for MinIO
            until mc alias set minio https://minio.storage.svc $MINIO_ROOT_USER $MINIO_ROOT_PASSWORD; do
              echo "Waiting for MinIO..."
              sleep 5
            done

            # Import all policies
            for dir in base apps users; do
              echo "Importing policies from $dir..."
              for policy in /policies/$dir/*.json; do
                if [ -f "$policy" ]; then
                  name=$(basename "$policy" .json)
                  echo "Creating policy: $name"
                  mc admin policy create minio "$name" "$policy" || \
                  mc admin policy update minio "$name" "$policy"
                fi
              done
            done

            echo "All policies imported successfully"
        env:
        - name: MINIO_ROOT_USER
          valueFrom:
            secretKeyRef:
              name: minio-root-secret
              key: config.env
        - name: MINIO_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: minio-root-secret
              key: config.env
        volumeMounts:
        - name: base-policies
          mountPath: /policies/base
        - name: app-policies
          mountPath: /policies/apps
        - name: user-policies
          mountPath: /policies/users
      volumes:
      - name: base-policies
        configMap:
          name: minio-base-policies
      - name: app-policies
        configMap:
          name: minio-app-policies
      - name: user-policies
        configMap:
          name: minio-user-policies
      restartPolicy: OnFailure
