---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: democratic-csi-nfs
  namespace: storage
  labels:
    pod-security.kubernetes.io/enforce: privileged
spec:
  interval: 1h
  chart:
    spec:
      chart: democratic-csi
      version: 0.14.6
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    csiDriver:
      name: org.democratic-csi.truenas-nfs

    controller:
      enabled: true
      strategy: deployment
      externalAttacher:
        enabled: false
      externalProvisioner:
        extraArgs:
          - --leader-election=false
          - --node-deployment=false
          - --enable-capacity=true
          - --capacity-poll-interval=30s
      externalResizer:
        enabled: true
      externalSnapshotter:
        enabled: true
        extraArgs:
          - --leader-election=false
          - --node-deployment=false

      driver:
        image: democraticcsi/democratic-csi:v1.9.3

    node:
      enabled: true
      hostPID: false
      driver:
        image: democraticcsi/democratic-csi:v1.9.3

    storageClasses:
    - name: truenas-nfs
      defaultClass: false
      reclaimPolicy: Retain
      volumeBindingMode: Immediate
      allowVolumeExpansion: true
      parameters:
        fsType: nfs

      mountOptions:
        - nfsvers=4.1
        - hard
        - timeo=600
        - retrans=2
        - noresvport
        - rsize=1048576
        - wsize=1048576

      secrets:
        provisioner-secret:
        controller-publish-secret:
        node-stage-secret:
        node-publish-secret:
        controller-expand-secret:

    volumeSnapshotClasses:
    - name: truenas-nfs-snapshots
      parameters:
        snapshotPrefix: "snapshot-"
      secrets:
        snapshotter-secret:

    driver:
      existingConfigSecret: democratic-csi-nfs-secret
      config:
        driver: freenas-api-nfs
        instance_id: "truenas-nfs"

        httpConnection:
          protocol: https
          host: "${SECRET_NFS_SERVER}"
          port: 443
          apiKey: "${SECRET_NAS_API_KEY}"
          allowInsecure: true
          apiVersion: 2

        zfs:
          datasetProperties:
            "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
          datasetParentName: "${SECRET_NFS_SHARE}/nfs/volumes"
          detachedSnapshotsDatasetParentName: "${SECRET_NFS_SHARE}/nfs/snapshots"

          datasetEnableQuotas: true
          datasetEnableReservation: false
          datasetPermissionsMode: "0777"
          datasetPermissionsUser: 0
          datasetPermissionsGroup: 0

        nfs:
          shareHost: "${SECRET_NFS_SERVER}"
          shareAlldirs: false
          shareAllowedHosts: []
          shareAllowedNetworks: []
          shareMaprootUser: root
          shareMaprootGroup: root
          shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: democratic-csi-smb
  namespace: storage
spec:
  interval: 1h
  chart:
    spec:
      chart: democratic-csi
      version: 0.14.6
      sourceRef:
        kind: HelmRepository
        name: democratic-csi
        namespace: flux-system
  install:
    remediation:
      retries: -1
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  values:
    csiDriver:
      name: org.democratic-csi.truenas-smb

    controller:
      enabled: true
      strategy: deployment
      externalAttacher:
        enabled: false
      externalProvisioner:
        extraArgs:
          - --leader-election=false
          - --node-deployment=false
          - --enable-capacity=true
          - --capacity-poll-interval=30s
      externalResizer:
        enabled: true
      externalSnapshotter:
        enabled: true
        extraArgs:
          - --leader-election=false
          - --node-deployment=false

      driver:
        image: democraticcsi/democratic-csi:v1.9.3

    node:
      enabled: true
      hostPID: false  # Not needed for SMB
      driver:
        image: democraticcsi/democratic-csi:v1.9.3

    storageClasses:
    - name: truenas-smb
      defaultClass: false
      reclaimPolicy: Retain
      volumeBindingMode: Immediate
      allowVolumeExpansion: true
      parameters:
        fsType: cifs

      mountOptions:
        - dir_mode=0777
        - file_mode=0777
        - uid=1001
        - gid=1001
        - iocharset=utf8
        - nobrl  # Disable byte range locks

      secrets:
        provisioner-secret:
        controller-publish-secret:
        node-stage-secret:
        node-publish-secret:
        controller-expand-secret:

    volumeSnapshotClasses:
    - name: truenas-smb-snapshots
      parameters:
        snapshotPrefix: "snapshot-"
      secrets:
        snapshotter-secret:

    driver:
      existingConfigSecret: democratic-csi-smb-secret
      config:
        driver: freenas-api-smb
        instance_id: "truenas-smb"

        httpConnection:
          protocol: https
          host: "${SECRET_NFS_SERVER}"
          port: 443
          apiKey: "${SECRET_NAS_API_KEY}"
          allowInsecure: true
          apiVersion: 2

        zfs:
          datasetParentName: "${SECRET_NFS_SHARE}/smb/volumes"
          detachedSnapshotsDatasetParentName: "${SECRET_NFS_SHARE}/smb/snapshots"

          datasetProperties:
            # SMB specific properties
            aclmode: restricted
            aclinherit: passthrough

          datasetEnableQuotas: true
          datasetEnableReservation: false
          datasetPermissionsMode: "0770"
          datasetPermissionsUser: 0
          datasetPermissionsGroup: 0

        smb:
          shareHost: "${SECRET_NFS_SERVER}"

          # SMB/CIFS share properties
          shareAuxiliaryConfiguration: |
            vfs objects = catia fruit streams_xattr
            fruit:metadata = stream
            fruit:model = MacStor
            fruit:veto_appledouble = no
            fruit:posix_rename = yes
            fruit:zero_file_id = yes
            fruit:wipe_intentionally_left_blank_rfork = yes
            fruit:delete_empty_adfiles = yes

          shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
          shareEnabled: true
          shareAllowedHosts: []
          shareAllowedNetworks: []
          shareMaprootUser: root
          shareMaprootGroup: root
# ---
# # yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2.json
# apiVersion: helm.toolkit.fluxcd.io/v2
# kind: HelmRelease
# metadata:
#   name: democratic-csi-iscsi
#   namespace: storage
# spec:
#   interval: 1h
#   chart:
#     spec:
#       chart: democratic-csi
#       version: 0.14.6
#       sourceRef:
#         kind: HelmRepository
#         name: democratic-csi
#         namespace: flux-system
#   install:
#     remediation:
#       retries: -1
#   upgrade:
#     cleanupOnFail: true
#     remediation:
#       retries: 3
#   values:
#     csiDriver:
#       name: org.democratic-csi.truenas-iscsi

#     controller:
#       enabled: true
#       strategy: deployment
#       externalAttacher:
#         enabled: true
#         extraArgs:
#           - --driver=org.democratic-csi.truenas-iscsi
#       externalProvisioner:
#         extraArgs:
#           - --leader-election=false
#           - --node-deployment=false
#           - --enable-capacity=true
#           - --capacity-poll-interval=30s
#       externalResizer:
#         enabled: true
#       externalSnapshotter:
#         enabled: true
#         extraArgs:
#           - --leader-election=false
#           - --node-deployment=false

#       driver:
#         image: democraticcsi/democratic-csi:v1.9.3

#     node:
#       enabled: true
#       hostPID: true  # Required for iSCSI
#       driver:
#         image: democraticcsi/democratic-csi:v1.9.3
#         extraEnv:
#           - name: ISCSIADM_HOST_STRATEGY
#             value: nsenter
#           - name: ISCSIADM_HOST_PATH
#             value: /usr/local/sbin/iscsiadm
#         iscsiDirHostPath: /usr/local/etc/iscsi
#         iscsiDirHostPathType: ""

#     storageClasses:
#     - name: truenas-iscsi
#       defaultClass: false
#       reclaimPolicy: Retain
#       volumeBindingMode: Immediate
#       allowVolumeExpansion: true
#       parameters:
#         fsType: ext4

#       secrets:
#         provisioner-secret:
#         controller-publish-secret:
#         node-stage-secret:
#         node-publish-secret:
#         controller-expand-secret:

#     volumeSnapshotClasses:
#     - name: truenas-iscsi-snapshots
#       parameters:
#         snapshotPrefix: "snapshot-"
#       secrets:
#         snapshotter-secret:

#     driver:
#       existingConfigSecret: democratic-csi-iscsi-secret
#       config:
#         driver: freenas-api-iscsi
#         instance_id: "truenas-iscsi"
#         httpConnection:
#           protocol: https
#           host: "${SECRET_NFS_SERVER}"
#           port: 443
#           # Same API key as NFS
#           apiKey: "${SECRET_NAS_API_KEY}"
#           allowInsecure: true
#           apiVersion: 2
#         zfs:
#           datasetParentName: "${SECRET_NFS_SHARE}/iscsi/volumes"
#           detachedSnapshotsDatasetParentName: "${SECRET_NFS_SHARE}/iscsi/snapshots"

#           datasetEnableQuotas: true
#           datasetEnableReservation: false
#         iscsi:
#           # TrueNAS iSCSI portal configuration
#           targetPortal: "${SECRET_NFS_SERVER}:3260"
#           interface: "enp129s0f1"
#           # iSCSI target naming
#           namePrefix: csi-
#           nameSuffix: ""
#           # IMPORTANT: Configure these in TrueNAS first
#           # Sharing -> Block (iSCSI) -> Portals -> Add Portal (if not exists)
#           # Sharing -> Block (iSCSI) -> Initiators -> Add Initiator Group
#           targetGroups:
#             - targetGroupPortalGroup: 1  # Default portal group
#               targetGroupInitiatorGroup: 1  # Create initiator group for your nodes
#               targetGroupAuthType: None
#               # targetGroupAuthGroup: # For CHAP authentication if needed
#           extentInsecureTpc: true
#           extentXenCompat: false
#           extentDisablePhysicalBlocksize: true
#           extentBlocksize: 512
#           extentRpm: "SSD"
#           extentAvailThreshold: 0

