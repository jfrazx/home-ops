---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: &app mealie
spec:
  interval: 1h
  maxHistory: 2
  chartRef:
    kind: OCIRepository
    name: app-template

  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
      strategy: rollback

  values:
    controllers:
      mealie:
        strategy: Recreate

        annotations:
          reloader.stakater.com/auto: "true"

        containers:
          app:
            image:
              repository: ghcr.io/mealie-recipes/mealie
              tag: v3.0.2
              pullPolicy: IfNotPresent

            envFrom:
              - secretRef:
                  name: "{{ .Release.Name }}-secret"
            env:
              TZ: "${TIMEZONE}"
              BASE_URL: &baseUrl "https://{{ .Release.Name }}.${SECRET_DOMAIN}"
              POSTGRES_URL_OVERRIDE:
                valueFrom:
                  secretKeyRef:
                    name: mealie-postgres-app
                    key: uri

    service:
      app:
        controller: *app
        ports:
          http:
            port: &port 9000

    route:
      app:
        annotations:
          gethomepage.dev/enabled: "true"
          gethomepage.dev/name: Mealie
          gethomepage.dev/icon: mealie.svg
          gethomepage.dev/group: Home
          gethomepage.dev/href: *baseUrl
          gethomepage.dev/widget.type: mealie
          gethomepage.dev/widget.url: http://mealie.services:9000
          gethomepage.dev/widget.key: "{{`{{HOMEPAGE_VAR_MEALIE_API_KEY}}`}}"
          gethomepage.dev/widget.version: "2"
          gethomepage.dev/widget.fields: '["recipes", "users", "categories", "tags"]'
          hajimari.io/enable: "true"
          hajimari.io/icon: "food"
          hajimari.io/appName: "Mealie"
          hajimari.io/group: "Home"

        hostnames: ["{{ .Release.Name }}.${SECRET_DOMAIN}"]
        parentRefs:
          - name: internal
            namespace: kube-system
            sectionName: https
        rules:
          - backendRefs:
              - name: *app
                port: *port

    persistence:
      data:
        type: persistentVolumeClaim
        accessMode: ReadWriteOnce
        size: 10Gi
        storageClass: ceph-block
        globalMounts:
          - path: /app/data

      backups:
        type: persistentVolumeClaim
        accessMode: ReadWriteMany
        storageClass: truenas-nfs-backups
        size: 40Gi
        globalMounts:
          - path: /app/data/backups
