---
# Certificate for OpenBao TLS
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: openbao-tls
  namespace: openbao-system
spec:
  secretName: openbao-tls
  issuerRef:
    name: letsencrypt-production
    kind: ClusterIssuer
  commonName: "openbao.${SECRET_DOMAIN}"
  dnsNames:
    - "openbao.${SECRET_DOMAIN}"
    - "openbao-0.openbao-internal.openbao-system.svc.cluster.local"
    - "openbao-1.openbao-internal.openbao-system.svc.cluster.local"
    - "openbao-2.openbao-internal.openbao-system.svc.cluster.local"
---
# SecretStore for OpenBao
apiVersion: external-secrets.io/v1beta1
kind: SecretStore
metadata:
  name: openbao-secretstore
  namespace: flux-system
spec:
  provider:
    vault:
      server: "https://openbao.external-secrets.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      caProvider:
        type: Secret
        name: openbao-tls
        key: ca.crt
        namespace: external-secrets
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "external-secrets"
          serviceAccountRef:
            name: "external-secrets"
---
# ClusterSecretStore for cluster-wide access
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: openbao-cluster-secretstore
spec:
  provider:
    vault:
      server: "https://openbao.external-secrets.svc.cluster.local:8200"
      path: "secret"
      version: "v2"
      caProvider:
        type: Secret
        name: openbao-tls
        key: ca.crt
        namespace: external-secrets
      auth:
        kubernetes:
          mountPath: "kubernetes"
          role: "external-secrets"
          serviceAccountRef:
            name: "external-secrets"
            namespace: "external-secrets"
